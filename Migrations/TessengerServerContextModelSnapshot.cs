// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tessenger.Server.Data;

#nullable disable

namespace Tessenger.Server.Migrations
{
    [DbContext(typeof(TessengerServerContext))]
    partial class TessengerServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tessenger.Server.Models.CallRoom", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AdminUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("adminusername");

                    b.Property<string>("CallType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("calltype");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdtime");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("endtime");

                    b.PrimitiveCollection<string>("Members")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("members");

                    b.Property<string>("RoomID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("roomid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("CallRoomRequest");
                });

            modelBuilder.Entity("Tessenger.Server.Models.Chat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.PrimitiveCollection<string>("Documentfiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("documentfiles");

                    b.Property<string>("Fusername")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("fusername");

                    b.PrimitiveCollection<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("images");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<string>("ReactEmoji")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reactemoji");

                    b.Property<string>("ReplyMessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("replymessid");

                    b.Property<string>("Sendusername")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sendusername");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("time");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("username");

                    b.Property<string>("VoicRecoardFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("voicerecoardfile");

                    b.HasKey("Id");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("Tessenger.Server.Models.DocumentDn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("size");

                    b.Property<string>("Uniquename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("uniquename");

                    b.HasKey("Id");

                    b.ToTable("DocumentDn");
                });

            modelBuilder.Entity("Tessenger.Server.Models.Friend", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.PrimitiveCollection<string>("Blocked")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("blocked");

                    b.PrimitiveCollection<string>("Fusername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fusername");

                    b.PrimitiveCollection<string>("StatusAccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("statusaccess");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Friend");
                });

            modelBuilder.Entity("Tessenger.Server.Models.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Admin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("admin");

                    b.PrimitiveCollection<string>("Members")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("members");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.Property<bool>("isAdminFullAccess")
                        .HasColumnType("bit")
                        .HasColumnName("isadminfullaccess");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("Tessenger.Server.Models.GroupChat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.PrimitiveCollection<string>("Documentfiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("documentfiles");

                    b.Property<string>("GroupUsername")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("groupusername");

                    b.PrimitiveCollection<string>("Images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("images");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("message");

                    b.Property<long>("PoloId")
                        .HasColumnType("bigint")
                        .HasColumnName("poloid");

                    b.PrimitiveCollection<string>("ReactEmoji")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reactemoji");

                    b.PrimitiveCollection<string>("ReactEmojiUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reactemojiusername");

                    b.Property<string>("ReplyMessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("replymessid");

                    b.PrimitiveCollection<string>("SeensUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("seensusername");

                    b.Property<string>("Sendusername")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sendusername");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("time");

                    b.Property<string>("VoicRecoardFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("voicerecoardfile");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("GroupChat");
                });

            modelBuilder.Entity("Tessenger.Server.Models.GroupInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profileimage");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("GroupInformation");
                });

            modelBuilder.Entity("Tessenger.Server.Models.GroupRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.PrimitiveCollection<string>("GetRequstedGroupuser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("getrequstedgroupuser");

                    b.PrimitiveCollection<string>("GetTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gettime");

                    b.Property<string>("GroupUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("groupusername");

                    b.PrimitiveCollection<string>("SendRequstedGroupuser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sendrequstedgroupuser");

                    b.PrimitiveCollection<string>("SendTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sendtime");

                    b.HasKey("Id");

                    b.ToTable("GroupRequest");
                });

            modelBuilder.Entity("Tessenger.Server.Models.Information", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("username");

                    b.Property<string>("Aboutme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("aboutme");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Authentation_Authenticator_App")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("authentationauthenticatorapp");

                    b.Property<string>("Authentation_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("authentationemail");

                    b.Property<string>("Authentation_Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("authentationphonenumber");

                    b.Property<string>("Authentation_Security_Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("authentationsecuritykey");

                    b.Property<string>("Authentation_Security_Questions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("authentationsecurityquestions");

                    b.Property<string>("Contactnum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contactnum");

                    b.Property<string>("CurrEdu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("curredu");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Facebooklink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("facebooklink");

                    b.Property<string>("Githublink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("githublink");

                    b.Property<string>("Highlighttext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("highlighttext");

                    b.Property<string>("Instragramlink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("instragramlink");

                    b.Property<bool>("Isactive")
                        .HasColumnType("bit")
                        .HasColumnName("isactive");

                    b.Property<string>("Linkdinlink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("linkdinlink");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nationality");

                    b.Property<string>("Pinterestlink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pinterestlink");

                    b.Property<string>("ProfileImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profileimage");

                    b.Property<string>("Redditlink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("redditlink");

                    b.Property<string>("Snapchartlink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("snapchartlink");

                    b.Property<string>("Tiktoklink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tiktoklink");

                    b.Property<string>("Twitterlink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("twitterlink");

                    b.Property<string>("Website2link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("website2link");

                    b.Property<string>("Website3linlk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("website3link");

                    b.Property<string>("Websitelink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("websitelink");

                    b.Property<string>("Whatsappnum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("whatsappnum");

                    b.Property<string>("Youtubelink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("youtubelink");

                    b.HasKey("Username");

                    b.ToTable("Information");
                });

            modelBuilder.Entity("Tessenger.Server.Models.Polo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("GroupUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("groupusername");

                    b.Property<string>("Sendername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("senderusername");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.PrimitiveCollection<string>("Topics")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("topics");

                    b.PrimitiveCollection<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("Polo");
                });

            modelBuilder.Entity("Tessenger.Server.Models.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.PrimitiveCollection<string>("GetRequsteduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("getrequsteduser");

                    b.PrimitiveCollection<string>("GetTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gettime");

                    b.PrimitiveCollection<string>("SendRequsteduser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sendrequsteduser");

                    b.PrimitiveCollection<string>("SendTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sendtime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("Tessenger.Server.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
